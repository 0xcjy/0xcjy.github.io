import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as p,b as t,d as o,w as l,r as a,o as c,f as d}from"./app-D6x_2015.js";const m={};function h(u,e){const n=a("RouteLink"),r=a("Catalog");return c(),s("div",null,[p(" more "),e[1]||(e[1]=t("h1",{id:"搜索",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#搜索"},[t("span",null,"搜索")])],-1)),e[2]||(e[2]=t("h2",{id:"介绍",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#介绍"},[t("span",null,"介绍")])],-1)),e[3]||(e[3]=t("p",null,"搜索是算法竞赛中的基础核心领域，主要分为盲目搜索（DFS/BFS）和启发式搜索（A*、IDA*）。深度优先搜索（DFS）以递归或栈实现，适用于状态空间大但需快速找到任意解的场景（如迷宫问题）；广度优先搜索（BFS）基于队列，保证找到最短路径（如八数码问题）。剪枝优化是搜索的关键技术，通过预判无效路径减少计算量，例如在数独求解中通过约束传播提前终止分支。启发式搜索则结合估价函数（如曼哈顿距离）引导方向，常用于复杂问题（如15拼图）。搜索算法常与状态压缩（位运算）、记忆化技术结合，应对指数级复杂度问题。",-1)),t("p",null,[o(n,{to:"/oi/"},{default:l(()=>e[0]||(e[0]=[d("回到总目录")])),_:1,__:[0]})]),o(r)])}const g=i(m,[["render",h]]),F=JSON.parse('{"path":"/oi/search/","title":"搜索","lang":"zh-CN","frontmatter":{"date":"2025-05-01T00:00:00.000Z","dir":[{"order":2}],"index":false,"editLink":false,"comment":false,"contributors":false,"description":"搜索 介绍 搜索是算法竞赛中的基础核心领域，主要分为盲目搜索（DFS/BFS）和启发式搜索（A*、IDA*）。深度优先搜索（DFS）以递归或栈实现，适用于状态空间大但需快速找到任意解的场景（如迷宫问题）；广度优先搜索（BFS）基于队列，保证找到最短路径（如八数码问题）。剪枝优化是搜索的关键技术，通过预判无效路径减少计算量，例如在数独求解中通过约束传播提...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"搜索\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CJY\\",\\"url\\":\\"https://0xcjy.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://0xcjy.github.io/oi/search/"}],["meta",{"property":"og:site_name","content":"CJY的博客"}],["meta",{"property":"og:title","content":"搜索"}],["meta",{"property":"og:description","content":"搜索 介绍 搜索是算法竞赛中的基础核心领域，主要分为盲目搜索（DFS/BFS）和启发式搜索（A*、IDA*）。深度优先搜索（DFS）以递归或栈实现，适用于状态空间大但需快速找到任意解的场景（如迷宫问题）；广度优先搜索（BFS）基于队列，保证找到最短路径（如八数码问题）。剪枝优化是搜索的关键技术，通过预判无效路径减少计算量，例如在数独求解中通过约束传播提..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2025-05-01T00:00:00.000Z"}]]},"git":{},"readingTime":{"minutes":1.04,"words":313},"filePathRelative":"oi/search/README.md","excerpt":"<!-- more -->\\n<h1>搜索</h1>\\n<h2>介绍</h2>\\n<p>搜索是算法竞赛中的基础核心领域，主要分为盲目搜索（DFS/BFS）和启发式搜索（A*、IDA*）。深度优先搜索（DFS）以递归或栈实现，适用于状态空间大但需快速找到任意解的场景（如迷宫问题）；广度优先搜索（BFS）基于队列，保证找到最短路径（如八数码问题）。剪枝优化是搜索的关键技术，通过预判无效路径减少计算量，例如在数独求解中通过约束传播提前终止分支。启发式搜索则结合估价函数（如曼哈顿距离）引导方向，常用于复杂问题（如15拼图）。搜索算法常与状态压缩（位运算）、记忆化技术结合，应对指数级复杂度问题。</p>\\n<p><a href=\\"/oi/\\" target=\\"_blank\\">回到总目录</a></p>","autoDesc":true}');export{g as comp,F as data};
