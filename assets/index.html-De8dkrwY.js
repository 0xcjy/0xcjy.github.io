import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as m,e as o,b as l,d as s,w as c,r as t,o as i,f as h}from"./app-D6x_2015.js";const d={};function g(x,a){const e=t("RouteLink"),n=t("Catalog");return i(),r("div",null,[m(" more "),a[1]||(a[1]=o('<h1 id="树论" tabindex="-1"><a class="header-anchor" href="#树论"><span>树论</span></a></h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>树是无向无环连通图，具有层次结构特性。基础内容包括二叉树遍历（前序、中序、后序）、多叉树表示法（孩子兄弟法）和树的性质（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>节点数</mtext><mo>=</mo><mtext>边数</mtext><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\\text{节点数}=\\text{边数}+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord cjk_fallback">节点数</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord text"><span class="mord cjk_fallback">边数</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>）。进阶方向涉及平衡树（AVL、红黑树维护查询效率）、线段树（区间统计）和字典树（Trie 处理字符串前缀）。LCA（最近公共祖先）算法（倍增法/Tarjan）和树链剖分（路径查询）是树论的高频考点。树形 DP 常结合后序遍历分析子树贡献，例如求树的重心（删除后最大子树最小）或直径（最长路径）。森林与多棵树的关系、虚树构建（压缩无用节点）则在特定问题中发挥作用。</p>',3)),l("p",null,[s(e,{to:"/oi/"},{default:c(()=>a[0]||(a[0]=[h("回到总目录")])),_:1,__:[0]})]),s(n)])}const f=p(d,[["render",g]]),b=JSON.parse('{"path":"/oi/tree/","title":"树论","lang":"zh-CN","frontmatter":{"date":"2025-05-01T00:00:00.000Z","dir":[{"order":5}],"index":false,"editLink":false,"comment":false,"contributors":false,"description":"树论 介绍 树是无向无环连通图，具有层次结构特性。基础内容包括二叉树遍历（前序、中序、后序）、多叉树表示法（孩子兄弟法）和树的性质（节点数=边数+1）。进阶方向涉及平衡树（AVL、红黑树维护查询效率）、线段树（区间统计）和字典树（Trie 处理字符串前缀）。LCA（最近公共祖先）算法（倍增法/Tarjan）和树链剖分（路径查询）是树论的高频考点。树形 ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"树论\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CJY\\",\\"url\\":\\"https://0xcjy.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://0xcjy.github.io/oi/tree/"}],["meta",{"property":"og:site_name","content":"CJY的博客"}],["meta",{"property":"og:title","content":"树论"}],["meta",{"property":"og:description","content":"树论 介绍 树是无向无环连通图，具有层次结构特性。基础内容包括二叉树遍历（前序、中序、后序）、多叉树表示法（孩子兄弟法）和树的性质（节点数=边数+1）。进阶方向涉及平衡树（AVL、红黑树维护查询效率）、线段树（区间统计）和字典树（Trie 处理字符串前缀）。LCA（最近公共祖先）算法（倍增法/Tarjan）和树链剖分（路径查询）是树论的高频考点。树形 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2025-05-01T00:00:00.000Z"}]]},"git":{},"readingTime":{"minutes":1.01,"words":304},"filePathRelative":"oi/tree/README.md","excerpt":"<!-- more -->\\n<h1>树论</h1>\\n<h2>介绍</h2>\\n<p>树是无向无环连通图，具有层次结构特性。基础内容包括二叉树遍历（前序、中序、后序）、多叉树表示法（孩子兄弟法）和树的性质（<span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mtext>节点数</mtext><mo>=</mo><mtext>边数</mtext><mo>+</mo><mn>1</mn></mrow><annotation encoding=\\"application/x-tex\\">\\\\text{节点数}=\\\\text{边数}+1</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.6833em;\\"></span><span class=\\"mord text\\"><span class=\\"mord cjk_fallback\\">节点数</span></span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span><span class=\\"mrel\\">=</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.7667em;vertical-align:-0.0833em;\\"></span><span class=\\"mord text\\"><span class=\\"mord cjk_fallback\\">边数</span></span><span class=\\"mspace\\" style=\\"margin-right:0.2222em;\\"></span><span class=\\"mbin\\">+</span><span class=\\"mspace\\" style=\\"margin-right:0.2222em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.6444em;\\"></span><span class=\\"mord\\">1</span></span></span></span>）。进阶方向涉及平衡树（AVL、红黑树维护查询效率）、线段树（区间统计）和字典树（Trie 处理字符串前缀）。LCA（最近公共祖先）算法（倍增法/Tarjan）和树链剖分（路径查询）是树论的高频考点。树形 DP 常结合后序遍历分析子树贡献，例如求树的重心（删除后最大子树最小）或直径（最长路径）。森林与多棵树的关系、虚树构建（压缩无用节点）则在特定问题中发挥作用。</p>","autoDesc":true}');export{f as comp,b as data};
